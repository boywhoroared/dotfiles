#!/bin/bash

# Helm - Library
# Collection of utility functions used by the Helm scripts.

# COLORS {{{
# Style
BOLD=$(tput bold)
UNDERLINE=$(tput sgr 0 1)
RESET=$(tput sgr0)
DIM=$(tput dim)
# Regular Colors
RED=$(tput setaf 1)
GREEN=$(tput setaf 2)
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 4)
PURPLE=$(tput setaf 5)
CYAN=$(tput setaf 6)
WHITE=$(tput setaf 7)
# Bold
BRED=${BOLD}$(tput setaf 1)
BGREEN=${BOLD}$(tput setaf 2)
BYELLOW=${BOLD}$(tput setaf 3)
BBLUE=${BOLD}$(tput setaf 4)
BPURPLE=${BOLD}$(tput setaf 5)
BCYAN=${BOLD}$(tput setaf 6)
BWHITE=${BOLD}$(tput setaf 7)
#}}}

# MESSAGES {{{
msg_error() {
  echo "$BRED!$RESET Error: $1" 
}

msg_notice() {
  echo "$CYAN-->$RESET $1"
}

msg() {
  echo "$GREEN==>$RESET $1"
}

msg_info() {
  echo "${BBLUE}i$RESET $1"
}

msg_warn() {
  echo "$BYELLOW*$RESET $1"
}

msg_help() {
  echo "$BPURPLE?$RESET $1"
}
# }}}

prompt_ask() {
  # 'Ask' functions like EXIT_STATUS. 0 is 'Yes'/success, 1 or higher is
  # 'No'/fail.
  read -p "$1 (y/n) ?" choice
  case "$choice" in 
    y|Y ) echo "0";;
    n|N ) echo "1";;
    * ) echo "2";;
  esac
}

# GIT {{{
git_repo_exists() {
  git ls-remote $1 &>/dev/null
  if [ $? = 0 ]
  then
    echo 1
  else
    echo 0
  fi
}

git_branch_exists() {
  git ls-remote --heads --exit-code $1 $2
  if [ $? -eq 2 ]
  then
    echo 1
  else
    echo 0
  fi
}
# }}}

